//
//  DaysValueTransformer.swift
//  Tracker
//
//  Created by N L on 25.1.25..
//
import Foundation

@objc
final class DaysValueTransformer: ValueTransformer {
    override class func transformedValueClass() -> AnyClass { NSData.self }
    override class func allowsReverseTransformation() -> Bool { true }
    
    override func transformedValue(_ value: Any?) -> Any? {
        print("DaysValueTransformer - –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ \(String(describing: value))")
       
//        guard let days = value as? [WeekDay] else {
        guard let days = value as? [WeekDay?] else {
            print("DaysValueTransformer - –≤–æ–∑–≤—Ä–∞—â–∞—é nil —Ç–∞–∫ –∫–∞–∫ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ value: \(String(describing: value))")
            return nil
        }
        let filteredDays = days.compactMap { $0 }
        print("üü° DaysValueTransformer - –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è nil –∑–Ω–∞—á–µ–Ω–∏–π: \(filteredDays)")
        
        if filteredDays.isEmpty {
            print(" üü° –ú–∞—Å—Å–∏–≤ –ø—É—Å—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤ Core Data.")
        } else {
            print("üü° –ú–∞—Å—Å–∏–≤ –Ω–µ –ø—É—Å—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ.")
        }
        
        do {
            let encodedData = try JSONEncoder().encode(filteredDays) as NSData
            print("DaysValueTransformer - –°–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: \(encodedData)" )
            return encodedData as NSData
         } catch {
             print("DaysValueTransformer - –û—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: \(error)")
             return nil
         }
    }
    
    override func reverseTransformedValue(_ value: Any?) -> Any? {
        print("DaysValueTransformer reverse - –¢–∏–ø value –∏–∑ CoreData:", type(of: value))
        guard let data = value as? NSData else {
            print("–û—à–∏–±–∫–∞: scheduleData –Ω–µ NSData - –≤–æ–∑–≤—Ä–∞—â–∞—é nil")
            return nil
        }
        if let jsonString = String(data: data as Data, encoding: .utf8) {
              print("DaysValueTransformer reverse - JSON –ø–µ—Ä–µ–¥ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º:", jsonString)
          } else {
              print("DaysValueTransformer reverse: –æ—à–∏–±–∫–∞ - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —Å—Ç—Ä–æ–∫—É")
          }
        do {
            let decodedDays = try JSONDecoder().decode([WeekDay].self, from: data as Data)
            print("DaysValueTransformer reverse - –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–Ω–∏:", decodedDays)
            return decodedDays
        } catch {
            print("DaysValueTransformer reverse - –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: \(error)")
            return nil
        }
    }
    
    static func register() {
        ValueTransformer.setValueTransformer(
            DaysValueTransformer(),
            forName: NSValueTransformerName(rawValue: String(describing: DaysValueTransformer.self))
        )
    }
}
